[{"C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\index.js":"1","C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\store.js":"2","C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\App.js":"3","C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\components\\Header.js":"4","C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\screens\\MainScreen.js":"5","C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\reducers\\candidateReducers.js":"6","C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\constants\\candidateConstants.js":"7","C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\actions\\candidateActions.js":"8","C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\screens\\ProfileScreen.js":"9","C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\components\\Searchbox.js":"10","C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\components\\Candidate.js":"11","C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\components\\CandidateStatus.js":"12","C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\screens\\RejectedScreen.js":"13","C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\screens\\ShortlistedScreen.js":"14"},{"size":324,"mtime":1609345002100,"results":"15","hashOfConfig":"16"},{"size":859,"mtime":1609515361500,"results":"17","hashOfConfig":"16"},{"size":1009,"mtime":1609518800308,"results":"18","hashOfConfig":"16"},{"size":966,"mtime":1609597476837,"results":"19","hashOfConfig":"16"},{"size":862,"mtime":1609514962812,"results":"20","hashOfConfig":"16"},{"size":2111,"mtime":1609598145113,"results":"21","hashOfConfig":"16"},{"size":852,"mtime":1609515132032,"results":"22","hashOfConfig":"16"},{"size":2693,"mtime":1609598020959,"results":"23","hashOfConfig":"16"},{"size":2440,"mtime":1609597475473,"results":"24","hashOfConfig":"16"},{"size":747,"mtime":1609500309197,"results":"25","hashOfConfig":"16"},{"size":1196,"mtime":1609519934446,"results":"26","hashOfConfig":"16"},{"size":508,"mtime":1609597313495,"results":"27","hashOfConfig":"16"},{"size":864,"mtime":1609518745263,"results":"28","hashOfConfig":"16"},{"size":860,"mtime":1609597748905,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"iz7fd4",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\index.js",[],["62","63"],"C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\store.js",[],"C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\App.js",[],"C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\components\\Header.js",["64","65"],"/** @format */\r\n\r\nimport React, { Fragment } from 'react'\r\nimport { Container, Navbar, Nav, Form } from 'react-bootstrap'\r\nimport { Link, Route } from 'react-router-dom'\r\nimport Searchbox from './Searchbox'\r\nimport Candidate from './CandidateStatus'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      {' '}\r\n      <Navbar bg='primary' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <Link to='/'>\r\n            <Navbar.Brand>\r\n              <h3>Job_Portal</h3>\r\n            </Navbar.Brand>\r\n          </Link>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route\r\n              render={({ history }) => (\r\n                <>\r\n                  <Searchbox history={history} />\r\n                </>\r\n              )}\r\n            />\r\n            <Candidate />\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\screens\\MainScreen.js",[],"C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\reducers\\candidateReducers.js",[],"C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\constants\\candidateConstants.js",[],"C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\actions\\candidateActions.js",[],"C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\screens\\ProfileScreen.js",["66"],"/** @format */\r\n\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCandidateById, updateCandidate } from '../actions/candidateActions'\r\nimport { Card, Row, Col, Container } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProfileScreen = ({ match }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const candidateProfile = useSelector((state) => state.candidateProfile)\r\n  const { candidate } = candidateProfile\r\n\r\n  useEffect(() => {\r\n    dispatch(getCandidateById(match.params.id))\r\n  }, [dispatch, match])\r\n\r\n  return (\r\n    <Container className='mt-2'>\r\n      <Link to='/'>\r\n        <button className='btn btn-outline-primary ml-5'>Go back</button>\r\n      </Link>\r\n      <Card className='profile-card'>\r\n        <img\r\n          className='card-img-top'\r\n          src={candidate.Image}\r\n          alt='Card image cap'\r\n        />\r\n\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <strong className='p-2'>ID:&nbsp;{candidate.candidate_id}</strong>\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <strong className='p-2'>Name:</strong>\r\n            {candidate.name}\r\n          </Card.Text>\r\n          <Card.Text>\r\n            <strong className='p-2'>Status:</strong>\r\n            <strong> {candidate.status}</strong>\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Row>\r\n            <Col md={6} className='text-center'>\r\n              <Link to='/'>\r\n                <button\r\n                  className='btn btn-outline-success'\r\n                  onClick={() => {\r\n                    dispatch(updateCandidate(match.params.id, 'Shortlisted'))\r\n                    dispatch(getCandidateById(match.params.id))\r\n                  }}>\r\n                  Shortlist\r\n                </button>\r\n              </Link>\r\n            </Col>\r\n            <Col md={6} className='text-center'>\r\n              <Link to='/'>\r\n                <button\r\n                  className='btn btn-outline-danger'\r\n                  onClick={() => {\r\n                    dispatch(updateCandidate(match.params.id, 'Rejected'))\r\n                    dispatch(getCandidateById(match.params.id))\r\n                  }}>\r\n                  Reject\r\n                </button>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Card.Footer>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\components\\Searchbox.js",[],"C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\components\\Candidate.js",["67"],"/** @format */\r\n\r\nimport React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Button, Row, Col } from 'react-bootstrap'\r\n\r\nconst Candidates = ({ candidate }) => {\r\n  return (\r\n    <Fragment>\r\n      <Card className='candidate-card'>\r\n        <img\r\n          className='card-img-top'\r\n          src={candidate.Image}\r\n          alt='Card image cap'\r\n        />\r\n\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <strong className='p-2'>ID:&nbsp;{candidate.candidate_id}</strong>\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <strong className='p-2'>Name:</strong>\r\n            {candidate.name}\r\n          </Card.Text>\r\n          <Card.Text>\r\n            <strong className='p-2'>Status:</strong>\r\n            <strong> {candidate.status}</strong>\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Row>\r\n            <Col className='text-center'>\r\n              <Link to={`/candidate/${candidate.candidate_id}`}>\r\n                <Button>Profile</Button>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Card.Footer>\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Candidates\r\n","C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\components\\CandidateStatus.js",[],"C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\screens\\RejectedScreen.js",[],"C:\\Users\\Premraj\\Desktop\\job_portal\\frontend\\src\\screens\\ShortlistedScreen.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":4,"column":29,"nodeType":"74","messageId":"75","endLine":4,"endColumn":32},{"ruleId":"72","severity":1,"message":"76","line":4,"column":34,"nodeType":"74","messageId":"75","endLine":4,"endColumn":38},{"ruleId":"77","severity":1,"message":"78","line":25,"column":9,"nodeType":"79","endLine":29,"endColumn":11},{"ruleId":"77","severity":1,"message":"78","line":11,"column":9,"nodeType":"79","endLine":15,"endColumn":11},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]